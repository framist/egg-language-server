@inproceedings{DBLP:conf/icfp/VisserBT98,
  author    = {Eelco Visser and
               Zine{-}El{-}Abidine Benaissa and
               Andrew P. Tolmach},
  editor    = {Matthias Felleisen and
               Paul Hudak and
               Christian Queinnec},
  title     = {Building Program Optimizers with Rewriting Strategies},
  booktitle = {Proceedings of the third {ACM} {SIGPLAN} International Conference
               on Functional Programming {(ICFP} '98), Baltimore, Maryland, USA,
               September 27-29, 1998},
  pages     = {13--26},
  publisher = {{ACM}},
  year      = {1998},
  url       = {https://doi.org/10.1145/289423.289425},
  doi       = {10.1145/289423.289425},
  timestamp = {Tue, 06 Nov 2018 16:59:24 +0100},
  biburl    = {https://dblp.org/rec/conf/icfp/VisserBT98.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/toplas/BrandHKO02,
  author    = {Mark van den Brand and
               Jan Heering and
               Paul Klint and
               Pieter A. Olivier},
  title     = {Compiling language definitions: the {ASF+SDF} compiler},
  journal   = {{ACM} Trans. Program. Lang. Syst.},
  volume    = {24},
  number    = {4},
  pages     = {334--368},
  year      = {2002},
  url       = {https://doi.org/10.1145/567097.567099},
  doi       = {10.1145/567097.567099},
  timestamp = {Fri, 27 Dec 2019 21:14:55 +0100},
  biburl    = {https://dblp.org/rec/journals/toplas/BrandHKO02.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/scitools/BoyleHW96,
  author    = {James M. Boyle and
               Terence J. Harmer and
               Victor L. Winter},
  editor    = {Erlend Arge and
               Are Magnus Bruaset and
               Hans Petter Langtangen},
  title     = {The {TAMPR} Program Transformation System: Simplifying the Development
               of Numerical Software},
  booktitle = {Modern Software Tools for Scientific Computing, SciTools 1996, Oslo,
               Norway, September 16-18, 1996},
  pages     = {353--372},
  publisher = {Birkh{\"{a}}user},
  year      = {1996},
  url       = {https://doi.org/10.1007/978-1-4612-1986-6\_17},
  doi       = {10.1007/978-1-4612-1986-6\_17},
  timestamp = {Fri, 24 Apr 2020 15:05:23 +0200},
  biburl    = {https://dblp.org/rec/conf/scitools/BoyleHW96.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@incollection{rewritesystems,
  author    = {Nachum Dershowitz and
               Jean{-}Pierre Jouannaud},
  editor    = {Jan van Leeuwen},
  title     = {Rewrite Systems},
  booktitle = {Handbook of Theoretical Computer Science, Volume {B:} Formal Models
               and Semantics},
  pages     = {243--320},
  publisher = {Elsevier and {MIT} Press},
  year      = {1990},
  url       = {https://doi.org/10.1016/b978-0-444-88074-1.50011-1},
  doi       = {10.1016/b978-0-444-88074-1.50011-1},
  timestamp = {Tue, 06 Aug 2019 09:45:21 +0200},
  biburl    = {https://dblp.org/rec/books/el/leeuwen90/DershowitzJ90.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{denali,
 author = {Joshi, Rajeev and Nelson, Greg and Randall, Keith},
 title = {Denali: A Goal-directed Superoptimizer},
 journal = {SIGPLAN Not.},
 issue_date = {May 2002},
 volume = {37},
 number = {5},
 month = may,
 year = {2002},
 issn = {0362-1340},
 pages = {304--314},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/543552.512566},
 doi = {10.1145/543552.512566},
 acmid = {512566},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {optimizing compiler, superoptimizer},
}

@phdthesis{nelson,
 author = {Nelson, Charles Gregory},
 title = {Techniques for Program Verification},
 year = {1980},
 note = {AAI8011683},
 publisher = {Stanford University},
 address = {Stanford, CA, USA},
}

@inproceedings{pp-congr,
author = {Nieuwenhuis, Robert and Oliveras, Albert},
title = {Proof-Producing Congruence Closure},
year = {2005},
isbn = {3540255966},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/978-3-540-32033-3_33},
doi = {10.1007/978-3-540-32033-3_33},
booktitle = {Proceedings of the 16th International Conference on Term Rewriting and Applications},
pages = {453–468},
numpages = {16},
location = {Nara, Japan},
series = {RTA’05}
}

@inproceedings{eqsat,
 author = {Tate, Ross and Stepp, Michael and Tatlock, Zachary and Lerner, Sorin},
 title = {Equality Saturation: A New Approach to Optimization},
 booktitle = {Proceedings of the 36th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '09},
 year = {2009},
 isbn = {978-1-60558-379-2},
 location = {Savannah, GA, USA},
 pages = {264--276},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/1480881.1480915},
 doi = {10.1145/1480881.1480915},
 acmid = {1480915},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler optimization, equality reasoning, intermediate representation},
}

@article{dpll,
author = {Davis, Martin and Putnam, Hilary},
title = {A Computing Procedure for Quantification Theory},
year = {1960},
issue_date = {July 1960},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {3},
issn = {0004-5411},
url = {https://doi.org/10.1145/321033.321034},
doi = {10.1145/321033.321034},
journal = {J. ACM},
month = jul,
pages = {201–215},
numpages = {15}
}

@InProceedings{eqsat-llvm,
author="Stepp, Michael
and Tate, Ross
and Lerner, Sorin",
editor="Gopalakrishnan, Ganesh
and Qadeer, Shaz",
title="Equality-Based Translation Validator for LLVM",
booktitle="Computer Aided Verification",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="737--742",
abstract="We updated our Peggy tool, previously presented in [6], to perform translation validation for the LLVM compiler using a technique called Equality Saturation. We present the tool, and illustrate its effectiveness at doing translation validation on SPEC 2006 benchmarks.",
isbn="978-3-642-22110-1"
}

@Inbook{nachum-rewrites,
author="Dershowitz, Nachum",
editor="Lauer, Peter E.",
title="A taste of rewrite systems",
bookTitle="Functional Programming, Concurrency, Simulation and Automated Reasoning: International Lecture Series 1991--1992 McMaster University, Hamilton, Ontario, Canada",
year="1993",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="199--228",
abstract="This survey of the theory and applications of rewriting with equations discusses the existence and uniqueness of normal forms, the KnuthBendix completion procedure and its variations, as well as rewriting-based (functional and logic) programming and (equational, first-order, and inductive) theorem proving. Ordinary, associative-commutative, and conditional rewriting are covered. Current areas of research are summarized and an extensive bibliography is provided.",
isbn="978-3-540-47776-1",
doi="10.1007/3-540-56883-2_11",
url="https://doi.org/10.1007/3-540-56883-2_11"
}

@article{simplify,
 author = {Detlefs, David and Nelson, Greg and Saxe, James B.},
 title = {Simplify: A Theorem Prover for Program Checking},
 journal = {J. ACM},
 issue_date = {May 2005},
 volume = {52},
 number = {3},
 month = may,
 year = {2005},
 issn = {0004-5411},
 pages = {365--473},
 numpages = {109},
 url = {http://doi.acm.org/10.1145/1066100.1066102},
 doi = {10.1145/1066100.1066102},
 acmid = {1066102},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Theorem proving, decision procedures, program checking},
}

@inproceedings{z3,
 author = {De Moura, Leonardo and Bj{\o}rner, Nikolaj},
 title = {Z3: An Efficient SMT Solver},
 booktitle = {Proceedings of the Theory and Practice of Software, 14th International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
 series = {TACAS'08/ETAPS'08},
 year = {2008},
 isbn = {3-540-78799-2, 978-3-540-78799-0},
 location = {Budapest, Hungary},
 pages = {337--340},
 numpages = {4},
 url = {http://dl.acm.org/citation.cfm?id=1792734.1792766},
 acmid = {1792766},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@article{graphs,
author = {Andries, Marc and Engels, Gregor and Habel, Annegret and Hoffmann, Berthold and Kreowski, Hans-J\"{o}rg and Kuske, Sabine and Plump, Detlef and Sch\"{u}rr, Andy and Taentzer, Gabriele},
title = {Graph Transformation for Specification and Programming},
year = {1999},
issue_date = {April 1999},
publisher = {Elsevier North-Holland, Inc.},
address = {USA},
volume = {34},
number = {1},
issn = {0167-6423},
url = {https://doi.org/10.1016/S0167-6423(98)00023-9},
doi = {10.1016/S0167-6423(98)00023-9},
journal = {Sci. Comput. Program.},
month = apr,
pages = {1–54},
numpages = {54},
keywords = {transformation units, rule-based specification, structuring, graph transformation}
}

@article{herbie,
author = {Panchekha, Pavel and Sanchez-Stern, Alex and Wilcox, James R. and Tatlock, Zachary},
title = {Automatically Improving Accuracy for Floating Point Expressions},
year = {2015},
issue_date = {August 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {50},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/2813885.2737959},
doi = {10.1145/2813885.2737959},
journal = {SIGPLAN Not.},
month = jun,
pages = {1–11},
numpages = {11},
keywords = {Floating point, program rewriting, numerical accuracy}
}

@online{rust,
  title = {Rust programming language},
  author = {Rust},
  howpublished = {\url{https://www.rust-lang.org/}},
  url = {https://www.rust-lang.org/},
  urldate = {2020-04-01},
}

@inproceedings{szalinski,
  title = {Synthesizing Structured {CAD} Models with Equality Saturation and Inverse Transformations},
  author = {
    Chandrakana Nandi and
    Max Willsey and
    Adam Anderson and
    James R. Wilcox and
    Eva Darulova and
    Dan Grossman and
    Zachary Tatlock
  },
  year = {2020},
  isbn = {9781450376136},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3385412.3386012},
  doi = {10.1145/3385412.3386012},
  booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages = {31–44},
  numpages = {14},
  keywords = {Program Synthesis, Equality Saturation, Computer-Aided Design, Decompilation},
  location = {London, UK},
  series = {PLDI 2020},
}

@article{reincarnate,
 author = {Nandi, Chandrakana and Wilcox, James R. and Panchekha, Pavel and Blau, Taylor and Grossman, Dan and Tatlock, Zachary},
 title = {Functional Programming for Compiling and Decompiling Computer-aided Design},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {September 2018},
 volume = {2},
 number = {ICFP},
 month = jul,
 year = {2018},
 issn = {2475-1421},
 pages = {99:1--99:31},
 articleno = {99},
 numpages = {31},
 url = {http://doi.acm.org/10.1145/3236794},
 doi = {10.1145/3236794},
 acmid = {3236794},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {3D printing, denotational semantics, language design, program synthesis},
}

@inproceedings{inverse,
author = {Du, Tao and Priya Inala, Jeevana and Pu, Yewen and Spielberg, Andrew and Schulz, Adriana and Rus, Daniela and Solar-Lezama, Armando and Matusik, Wojciech},
year = {2018},
month = {12},
pages = {1-16},
title = {InverseCSG: automatic conversion of 3D models to CSG trees},
doi = {10.1145/3272127.3275006},
}

@inproceedings{shape,
title={Learning to Infer and Execute 3D Shape Programs},
author={Yonglong Tian and Andrew Luo and Xingyuan Sun and Kevin Ellis and William T. Freeman and Joshua B. Tenenbaum and Jiajun Wu},
booktitle={International Conference on Learning Representations},
year={2019},
url={https://openreview.net/forum?id=rylNH20qFQ},
}


@inproceedings{latex,
  title={Learning to Infer Graphics Programs from Hand-Drawn Images},
  author={Kevin Ellis and Daniel Ritchie and Armando Solar-Lezama and Joshua B. Tenenbaum},
  booktitle={Neural Information Processing Systems (NIPS)},
  year={2018},
}

@article{csgnet,
  author    = {Gopal Sharma and
               Rishabh Goyal and
               Difan Liu and
               Evangelos Kalogerakis and
               Subhransu Maji},
  title     = {CSGNet: Neural Shape Parser for Constructive Solid Geometry},
  journal   = {CoRR},
  volume    = {abs/1712.08290},
  year      = {2017},
  url       = {http://arxiv.org/abs/1712.08290},
  archivePrefix = {arXiv},
  eprint    = {1712.08290},
  timestamp = {Mon, 13 Aug 2018 16:47:26 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1712-08290},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{ematching,
  author="de Moura, Leonardo and Bj{\o}rner, Nikolaj",
  editor="Pfenning, Frank",
  title="Efficient E-Matching for SMT Solvers",
  booktitle="Automated Deduction -- CADE-21",
  year="2007",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="183--198",
  abstract="Satisfiability Modulo Theories (SMT) solvers have proven highly scalable, efficient and suitable for integrating theory reasoning. However, for numerous applications from program analysis and verification, the ground fragment is insufficient, as proof obligations often include quantifiers. A well known approach for quantifier reasoning uses a matching algorithm that works against an E-graph to instantiate quantified variables. This paper introduces algorithms that identify matches on E-graphs incrementally and efficiently. In particular, we introduce an index that works on E-graphs, called E-matching code trees that combine features of substitution and code trees, used in saturation based theorem provers. E-matching code trees allow performing matching against several patterns simultaneously. The code trees are combined with an additional index, called the inverted path index, which filters E-graph terms that may potentially match patterns when the E-graph is updated. Experimental results show substantial performance improvements over existing state-of-the-art SMT solvers.",
  isbn="978-3-540-73595-3"
}

@article{10.1145/36177.36194,
author = {Massalin, Henry},
title = {Superoptimizer: A Look at the Smallest Program},
year = {1987},
issue_date = {November 1987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {15},
number = {5},
issn = {0163-5964},
url = {https://doi.org/10.1145/36177.36194},
doi = {10.1145/36177.36194},
journal = {SIGARCH Comput. Archit. News},
month = oct,
pages = {122–126},
numpages = {5}
}

  

@inproceedings{massalin,
author = {Massalin, Henry},
title = {Superoptimizer: A Look at the Smallest Program},
year = {1987},
isbn = {0818608056},
publisher = {IEEE Computer Society Press},
address = {Washington, DC, USA},
url = {https://doi.org/10.1145/36206.36194},
doi = {10.1145/36206.36194},
booktitle = {Proceedings of the Second International Conference on Architectual Support for Programming Languages and Operating Systems},
pages = {122–126},
numpages = {5},
location = {Palo Alto, California, USA},
series = {ASPLOS II}
}

@article{unionfind1964,
    author = {Galler, Bernard A. and Fisher, Michael J.},
    title = {An Improved Equivalence Algorithm},
    year = {1964},
    issue_date = {May 1964},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {7},
    number = {5},
    issn = {0001-0782},
    url = {https://doi.org/10.1145/364099.364331},
    doi = {10.1145/364099.364331},
    journal = {Commun. ACM},
    month = may,
    pages = {301–303},
    numpages = {3}
}

@article{unionfind,
	author = {Tarjan, Robert Endre},
	title = {Efficiency of a Good But Not Linear Set Union Algorithm},
	year = {1975},
	issue_date = {April 1975},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {22},
	number = {2},
	issn = {0004-5411},
	url = {https://doi-org.offcampus.lib.washington.edu/10.1145/321879.321884},
	doi = {10.1145/321879.321884},
	journal = {J. ACM},
	month = apr,
	pages = {215–225},
	numpages = {11}
}

@Article{Boehm_2019,
  author       = {Boehm, Matthias},
  title        = {Apache {SystemML}},
  year         = 2019,
  pages        = {81–86},
  doi          = {10.1007/978-3-319-77525-8_187},
  url          = {http://dx.doi.org/10.1007/978-3-319-77525-8_187},
  isbn         = 9783319775258,
  journal      = {Encyclopedia of Big Data Technologies},
  publisher    = {Springer International Publishing}
}

@article{spores,
  title={{SPORES}: Sum-Product Optimization via Relational Equality Saturation for Large Scale Linear Algebra},
  author={Wang, Yisu Remy and Hutchison, Shana and Leang, Jonathan and Howe, Bill and Suciu, Dan},
  journal={Proceedings of the VLDB Endowment},
  year={2020},
  publisher={VLDB Endowment}
}

@article {wu_siga19,
  author = {Chenming Wu and Haisen Zhao and Chandrakana Nandi and Jeffrey I. Lipton and Zachary Tatlock and Adriana Schulz},
  title = {Carpentry Compiler},
  journal = {ACM Transactions on Graphics},
  note = {presented at SIGGRAPH Asia 2019},
  volume = {38},
  number = {6},
  pages = {Article No. 195},
  year = {2019}
}

@InProceedings{sygus-rws-enum,
  author="N{\"o}tzli, Andres
    and Reynolds, Andrew
    and Barbosa, Haniel
    and Niemetz, Aina
    and Preiner, Mathias
    and Barrett, Clark
    and Tinelli, Cesare",
  editor="Janota, Mikol{\'a}{\v{s}}
and Lynce, In{\^e}s",
    title="Syntax-Guided Rewrite Rule Enumeration for SMT Solvers",
    booktitle="Theory and Applications of Satisfiability Testing -- SAT 2019",
    year="2019",
    publisher="Springer International Publishing",
    address="Cham",
    pages="279--297",
    abstract="The performance of modern Satisfiability Modulo Theories (SMT) solvers relies crucially on efficient decision procedures as well as static simplification techniques, which include large sets of rewrite rules. Manually discovering and implementing rewrite rules is challenging. In this work, we propose a framework that uses enumerative syntax-guided synthesis (SyGuS) to propose rewrite rules that are not implemented in a given SMT solver. We implement this framework in cvc4, a state-of-the-art SMT and SyGuS solver, and evaluate several use cases. We show that some SMT solvers miss rewriting opportunities, or worse, have bugs in their rewriters. We also show that a variation of our approach can be used to test the correctness of a rewriter. Finally, we show that rewrites discovered with this technique lead to significant improvements in cvc4 on both SMT and SyGuS problems over bit-vectors and strings.",
    isbn="978-3-030-24258-9"
}

@inproceedings{yogo-pldi20,
author = {Premtoon, Varot and Koppel, James and Solar-Lezama, Armando},
title = {Semantic Code Search via Equational Reasoning},
year = {2020},
isbn = {9781450376136},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3385412.3386001},
doi = {10.1145/3385412.3386001},
booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {1066–1082},
numpages = {17},
keywords = {equational reasoning, code search},
location = {London, UK},
series = {PLDI 2020}
}

@inproceedings{taso,
  title={TASO: optimizing deep learning computation with automatic generation of graph substitutions},
  author={Jia, Zhihao and Padon, Oded and Thomas, James and Warszawski, Todd and Zaharia, Matei and Aiken, Alex},
  booktitle={Proceedings of the 27th ACM Symposium on Operating Systems Principles},
  pages={47--62},
  year={2019}
}

@article{downey-cse,
  author = {Downey, Peter J. and Sethi, Ravi and Tarjan, Robert Endre},
  title = {Variations on the Common Subexpression Problem},
  year = {1980},
  issue_date = {Oct. 1980},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {27},
  number = {4},
  issn = {0004-5411},
  url = {https://doi.org/10.1145/322217.322228},
  doi = {10.1145/322217.322228},
  journal = {J. ACM},
  month = oct,
  pages = {758–771},
  numpages = {14}
}

@inproceedings{kozen-stoc77,
author = {Kozen, Dexter},
title = {Complexity of Finitely Presented Algebras},
year = {1977},
isbn = {9781450374095},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800105.803406},
doi = {10.1145/800105.803406},
abstract = {An algebra A is finitely presented if there is a finite set G of generator symbols, a finite set O of operator symbols, and a finite set Γ of defining relations xΞy where x and y are well-formed terms over G and O, such that A is isomorphic to the free algebra on G and O modulo the congruence induced by Γ.The uniform word problem, the finiteness problem, the triviality problem (whether A is the one element algebra), and the subalgebra membership problem (whether a given element of A is contained in a finitely generated subalgebra of A) for finitely presented algebras are shown to be ≤mlog-complete for P. The schema satisfiability problem and schema validity problem are shown to be ≤mlog-complete for NP and co-NP, respectively. Finally, the problem of isomorphism of finitely presented algebras is shown to be polynomial time many-one equivalent to the problem of graph isomorphism.},
booktitle = {Proceedings of the Ninth Annual ACM Symposium on Theory of Computing},
pages = {164–177},
numpages = {14},
location = {Boulder, Colorado, USA},
series = {STOC '77}
}

@article{nelson-oppen-78,
author = {Nelson, Greg and Oppen, Derek C.},
title = {Fast Decision Procedures Based on Congruence Closure},
year = {1980},
issue_date = {April 1980},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {27},
number = {2},
issn = {0004-5411},
url = {https://doi.org/10.1145/322186.322198},
doi = {10.1145/322186.322198},
abstract = {The notion of the congruence closure of a relation on a graph is defined and several algorithms for computing it are surveyed. A simple proof is given that the congruence closure algorithm provides a decision procedure for the quantifier-free theory of equality. A decision procedure is then given for the quantifier-free theory of LISP list structure based on the congruence closure algorithm. Both decision procedures determine the satisfiability of a conjunction of literals of length n in average time O(n log n) using the fastest known congruence closure algorithm. It is also shown that if the axiomatization of the theory of list structure is changed slightly, the problem of determining the satisfiability of a conjunction of literals becomes NP-complete. The decision procedures have been implemented in the authors' simplifier for the Stanford Pascal Verifier.},
journal = {J. ACM},
month = apr,
pages = {356–364},
numpages = {9}
}


